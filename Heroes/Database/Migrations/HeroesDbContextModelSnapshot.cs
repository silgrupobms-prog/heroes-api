// <auto-generated />
using System;
using Heroes.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Heroes.Database.Migrations
{
    [DbContext(typeof(HeroesDbContext))]
    partial class HeroesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.HeroPowerDomain", b =>
                {
                    b.Property<int>("HeroeId")
                        .HasColumnType("integer")
                        .HasColumnName("heroe_id");

                    b.Property<int>("PowerId")
                        .HasColumnType("integer")
                        .HasColumnName("power_id");

                    b.HasKey("HeroeId", "PowerId");

                    b.HasIndex("PowerId");

                    b.ToTable("hero_power", (string)null);
                });

            modelBuilder.Entity("Domain.HeroeDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Height")
                        .HasColumnType("integer")
                        .HasColumnName("height");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Weight")
                        .HasColumnType("integer")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.ToTable("heroes", (string)null);
                });

            modelBuilder.Entity("Domain.PowerDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("description");

                    b.Property<string>("Superpower")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("superpower");

                    b.HasKey("Id");

                    b.ToTable("power", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Capacidade de levantar objetos extremamente pesados.",
                            Superpower = "Super Força"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Capacidade de voar em altas velocidades.",
                            Superpower = "Voo"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Pode ficar invisível à vontade.",
                            Superpower = "Invisibilidade"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Capacidade de ler e comunicar-se com a mente.",
                            Superpower = "Telepatia"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Mover objetos com o poder da mente.",
                            Superpower = "Telecinese"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Capacidade de se mover em velocidades incríveis.",
                            Superpower = "Velocidade Sobrehumana"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Capacidade de curar ferimentos rapidamente.",
                            Superpower = "Regeneração"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Manipular e gerar fogo com as mãos.",
                            Superpower = "Controle do Fogo"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Manipular a água e criar formas com ela.",
                            Superpower = "Controle da Água"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Criar barreiras protetoras invisíveis.",
                            Superpower = "Campo de Força"
                        });
                });

            modelBuilder.Entity("Domain.HeroPowerDomain", b =>
                {
                    b.HasOne("Domain.HeroeDomain", "Heroe")
                        .WithMany("HeroePowers")
                        .HasForeignKey("HeroeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.PowerDomain", "Power")
                        .WithMany("HeroPowers")
                        .HasForeignKey("PowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Heroe");

                    b.Navigation("Power");
                });

            modelBuilder.Entity("Domain.HeroeDomain", b =>
                {
                    b.Navigation("HeroePowers");
                });

            modelBuilder.Entity("Domain.PowerDomain", b =>
                {
                    b.Navigation("HeroPowers");
                });
#pragma warning restore 612, 618
        }
    }
}
